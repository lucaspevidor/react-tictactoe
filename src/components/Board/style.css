td {
  width: 100px;
  height: 100px;
  position: relative;
}

tr:not(:first-child) {
  border-top: solid 1px #000;
}

td:not(:first-child) {
  border-left: solid 1px #000;
}

tr:has(td) {
  background-color: red;
}

button {
  background-color: transparent;
  outline: none;
  border: none;
  width: 100%;
  height: 100%;
  padding: 0;
}

.selectable {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.selectable::after {
  content: "";
  width: 60%;
  height: 60%;
  position: absolute;
  top: calc(50% - 30%);
  left: calc(50% - 30%);
  background-color: #eee;
  border-radius: 100%;
  transform: scale(0);
  transition: transform cubic-bezier(0.075, 0.82, 0.165, 1) 0.2s;
}

.selectable:hover:after {
  transform: scale(100%);
}

.boardItem {
  transform: scale(0);
  animation: spawn cubic-bezier(0.075, 0.82, 0.165, 1) 0.2s forwards;
}

.boardItem.despawn {
  animation: despawn cubic-bezier(0.075, 0.82, 0.165, 1) 0.2s forwards;
}

@keyframes spawn {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(100%);
  }
}

@keyframes despawn {
  from {
    transform: scale(100%);
  }
  to {
    transform: scale(0%);
  }
}

.playAgainDiv {
  margin-top: 30px;
  width: 150px;
  position: relative;
}

.playAgainBtn {
  font-family: "Open Sans", sans-serif;
  color: #888;
  font-size: 16px;

  background-color: #eee;

  position: absolute;
  width: 150px;
  height: 50px;
  border-radius: 10px;

  &:hover {
    background-color: #ddd;
    cursor: pointer;
  }

  animation: spawn cubic-bezier(0.075, 0.82, 0.165, 1) 0.2s forwards;
}

.playAgainBtn.despawn {
  animation: despawn cubic-bezier(0.075, 0.82, 0.165, 1) 0.2s forwards;
}

.winLine {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 50;
}

.vertical.winLine::after {
  content: "";
  width: 3px;
  height: 300%;
  position: absolute;
  top: -150%;
  left: calc(50% - 2px);
  background-color: red;
  transform: scaleY(0);
  animation: drawVerticalLine ease-in-out 0.5s forwards;
}

.vertical.winLine.despawn::after {
  top: 0;
  animation: despawnVerticalLine ease-in-out 0.2s forwards;
}

@keyframes drawVerticalLine {
  from {
    top: -150%;
    transform: scaleY(0);
  }
  to {
    top: 0;
    transform: scaleY(1);
  }
}

@keyframes despawnVerticalLine {
  from {
    transform: scaleY(1);
  }
  to {
    transform: scaleY(0);
  }
}

.horizontal.winLine::after {
  content: "";
  width: 300%;
  height: 3px;
  position: absolute;
  top: calc(50% - 2px);
  left: -150%;
  background-color: red;
  transform: scaleX(0);
  animation: drawHorizontalLine ease-in-out 0.5s forwards;
}
.horizontal.winLine.despawn::after {
  left: 0;
  animation: despawnHorizontalLine ease-in-out 0.2s forwards;
}

@keyframes drawHorizontalLine {
  from {
    left: -150%;
    transform: scaleX(0);
  }
  to {
    left: 0;
    transform: scaleX(1);
  }
}

@keyframes despawnHorizontalLine {
  from {
    transform: scaleX(1);
  }
  to {
    transform: scaleX(0);
  }
}

.diagonalRight.winLine::after {
  content: "";
  width: 3px;
  height: calc(300% * 1.414213);
  position: absolute;
  top: calc(-150% - (300% * 1.414213 - 300%) / 2);
  left: -2px;
  background-color: red;
  transform: rotate(-45deg) scaleY(0.02);
  animation: drawDiagonalRightLine ease-in-out 0.5s forwards;
}

.diagonalRight.despawn::after {
  top: calc(-1 * (300% * 1.414213 - 300%) / 2);
  left: calc(150% - 2px);
  transform: rotate(-45deg) scaleY(1);
  animation: despawnDiagonalRightLine ease-in-out 0.2s forwards;
}

@keyframes drawDiagonalRightLine {
  from {
    top: calc(-150% - (300% * 1.414213 - 300%) / 2);
    left: -2px;
    transform: rotate(-45deg) scaleY(0);
  }
  to {
    top: calc(-1 * (300% * 1.414213 - 300%) / 2);
    left: calc(150% - 2px);
    transform: rotate(-45deg) scaleY(1);
  }
}

@keyframes despawnDiagonalRightLine {
  from {
    transform: rotate(-45deg) scaleY(1);
  }
  to {
    transform: rotate(-45deg) scaleY(0);
  }
}

.diagonalLeft.winLine::after {
  content: "";
  width: 3px;
  height: calc(300% * 1.414213);
  position: absolute;
  top: calc(-150% - (300% * 1.414213 - 300%) / 2);
  left: calc(100% - 4px);
  background-color: red;
  transform: rotate(45deg) scaleY(0.02);
  animation: drawDiagonalLeftLine ease-in-out 0.5s forwards;
}
.diagonalLeft.despawn::after {
  top: calc(-1 * (300% * 1.414213 - 300%) / 2);
  left: calc(-50% - 4px);
  transform: rotate(45deg) scaleY(1);
  animation: despawnDiagonalLeftLine ease-in-out 0.2s forwards;
}

@keyframes drawDiagonalLeftLine {
  from {
    top: calc(-150% - (300% * 1.414213 - 300%) / 2);
    left: calc(100% - 4px);
    transform: rotate(45deg) scaleY(0);
  }
  to {
    top: calc(-1 * (300% * 1.414213 - 300%) / 2);
    left: calc(-50% - 4px);
    transform: rotate(45deg) scaleY(1);
  }
}

@keyframes despawnDiagonalLeftLine {
  from {
    transform: rotate(45deg) scaleY(1);
  }
  to {
    transform: rotate(45deg) scaleY(0);
  }
}
